name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v1.0.1'

permissions:
  contents: write
  packages: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf xdg-utils
      - run: npm ci
      - run: npm run tauri build
      - uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/rpm/*.rpm

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - run: npm ci
      - run: npm run tauri build
      - uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin
      - uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - run: npm ci
      - run: npm run tauri build -- --target x86_64-apple-darwin
      - run: npm run tauri build -- --target aarch64-apple-darwin
      - uses: actions/upload-artifact@v4
        with:
          name: macos-binaries
          path: |
            src-tauri/target/*/release/bundle/dmg/*.dmg
            src-tauri/target/*/release/bundle/macos/*.app

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-binaries
          path: ./release-files/
          
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-binaries
          path: ./release-files/
          
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-binaries
          path: ./release-files/
      
      - name: Display files to be released
        run: |
          echo "Files to be released:"
          find ./release-files -type f | sort
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-files/**/*
          tag_name: ${{ inputs.tag || github.ref_name }}
          name: FFmpeg Downloader ${{ inputs.tag || github.ref_name }}
          body: |
            ## 🎉 FFmpeg Downloader ${{ inputs.tag || github.ref_name }}
            
            Cross-platform FFmpeg downloader with automatic OS detection and real-time progress tracking.
            
            ### 📦 Downloads
            
            **Windows:**
            - `.msi` - Windows Installer package
            - `.exe` - Standalone executable
            
            **macOS:**
            - `.dmg` - Disk image for easy installation
            - `.app` - Application bundle
            - Supports both Intel (x86_64) and Apple Silicon (ARM64)
            
            **Linux:**
            - `.deb` - Debian/Ubuntu package
            - `.rpm` - RedHat/Fedora/SUSE package
            
            ### ✨ Features
            - 🖥️ Cross-platform support (Windows, macOS, Linux)
            - 📥 Smart OS detection and binary selection
            - 📊 Real-time download progress
            - ✅ Built-in FFmpeg verification
            - 🎨 Modern React UI
            - 🔒 Secure Tauri framework
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}